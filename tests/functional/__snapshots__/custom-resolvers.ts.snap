// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`custom resolvers execution should be possible to use generated inputs, args and types to build own resolvers: custom posts resolver mocked response 1`] = `
Object {
  "customFindManyPost": Array [
    Object {
      "color": "RED",
      "uuid": "b0c0d78e-4dff-4cdd-ba23-9b417dc684e2",
    },
    Object {
      "color": "BLUE",
      "uuid": "72c8a188-3d46-45b3-b23f-7d420aa282f1",
    },
  ],
}
`;

exports[`custom resolvers execution should be possible to use generated inputs, args and types to build own resolvers: findManyPost call args 1`] = `
Array [
  Array [
    FindManyPostArgs {
      "orderBy": PostOrderByInput {
        "color": "desc",
      },
      "skip": 1,
      "take": 1,
      "where": PostWhereInput {
        "content": StringFilter {
          "startsWith": "Test",
        },
      },
    },
  ],
]
`;

exports[`custom resolvers execution should be possible to use generated inputs, args and types to build own resolvers: graphQLSchemaSDL 1`] = `
"# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

enum Color {
  BLUE
  GREEN
  RED
}

input ColorFilter {
  equals: Color
  in: [Color!]
  not: Color
  notIn: [Color!]
}

enum OrderByArg {
  asc
  desc
}

type Post {
  color: Color!
  content: String!
  uuid: String!
}

input PostOrderByInput {
  color: OrderByArg
  content: OrderByArg
  uuid: OrderByArg
}

input PostWhereInput {
  AND: [PostWhereInput!]
  color: ColorFilter
  content: StringFilter
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  uuid: StringFilter
}

input PostWhereUniqueInput {
  uuid: String
}

type Query {
  customFindManyPost(cursor: PostWhereUniqueInput, orderBy: PostOrderByInput, skip: Int, take: Int, where: PostWhereInput): [Post!]!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}
"
`;

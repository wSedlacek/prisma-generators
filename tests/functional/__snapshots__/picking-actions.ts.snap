// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`picking prisma actions should expose in GraphQL schema only actions chosen by single resolvers: graphQLSchemaSDL 1`] = `
"# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

\\"\\"\\"
The javascript \`Date\` as string. Type represents date and time as the ISO Date string.
\\"\\"\\"
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type Mutation {
  createUser(data: UserCreateInput!): User!
}

input NullableStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

enum OrderByArg {
  asc
  desc
}

type Query {
  users(cursor: UserWhereUniqueInput, orderBy: UserOrderByInput, skip: Int, take: Int, where: UserWhereInput): [User!]!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type User {
  dateField: DateTime!
  intIdField: Int!
  optionalStringField: String
  uniqueStringField: String!
}

input UserCreateInput {
  dateField: DateTime!
  optionalStringField: String
  uniqueStringField: String!
}

input UserOrderByInput {
  dateField: OrderByArg
  intIdField: OrderByArg
  optionalStringField: OrderByArg
  uniqueStringField: OrderByArg
}

input UserWhereInput {
  AND: [UserWhereInput!]
  dateField: DateTimeFilter
  intIdField: IntFilter
  NOT: [UserWhereInput!]
  optionalStringField: NullableStringFilter
  OR: [UserWhereInput!]
  uniqueStringField: StringFilter
}

input UserWhereUniqueInput {
  intIdField: Int
  uniqueStringField: String
}
"
`;
